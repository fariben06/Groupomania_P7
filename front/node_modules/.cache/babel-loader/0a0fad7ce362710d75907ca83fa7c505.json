{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fd-Formation\\\\Desktop\\\\Groupomania\\\\front\\\\src\\\\components\\\\Article\\\\AddForm.js\";\nimport React from \"react\"; // Importer react pour utiliser les fonctionnalités de react\n\nimport axios from \"axios\"; // Importer axios pour utiliser les fonctionnalités de axios\n\nimport App from \"../App\"; // Importer le composant App pour utiliser les fonctionnalités de react\n\nimport Avatar from \"../Avatar/Avatar\"; // Importer le composant Avatar pour utiliser les fonctionnalités de react\n// Initialisation du composant AddForm (Envoi d'un article).\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class AddForm extends React.Component {\n  constructor(props) {\n    // Constructeur du composant AddForm (Envoi d'un article).\n    super(props); // Appel du constructeur de la classe parente (React.Component).\n\n    this.state = {\n      // Initialisation des variables de l'état du composant.\n      // données utilisateur\n      userLogged: props.userLogged,\n      // Utilisateur connecté\n      valueArticle: '',\n      // Valeur du champ article \n      fileUpload: null,\n      // Fichier uploadé (image) \n      // Options\n      isValid: true,\n      // Validation du formulaire (true = pas de validation, false = validation)\n      isLoading: false // Chargement du formulaire (true = chargement, false = pas de chargement)\n\n    }; // Url de l'API pour l'envoi d'un article.\n\n    this.articleUrl = 'http://localhost:8080/api/articles'; // OnClick du bouton d'envoi d'article.\n\n    this.OnSubmitArticle = this.OnSubmitArticle.bind(this); // OnChange du champ article (changement de la valeur).\n\n    this.OnChange = this.OnChange.bind(this);\n  } // Gestion de l'envoi d'un article (OnSubmitArticle).\n\n\n  OnSubmitArticle(event) {\n    // Récupération des données de l'état du composant (userLogged, valueArticle, fileUpload) \n    const {\n      userLogged,\n      valueArticle,\n      fileUpload\n    } = this.state; // L'objet contient des formes de valeur\n\n    const formData = new FormData();\n    formData.append(\"userId\", userLogged.id); // Ajout de l'id de l'utilisateur connecté dans l'objet\n\n    formData.append(\"article\", valueArticle); // Ajout du texte de l'article dans l'objet\n\n    formData.append(\"image\", fileUpload); // Ajout de l'image dans l'objet\n    // Annulation de l'envoi du formulaire (par défaut) et chargement du formulaire (true)\n\n    event.preventDefault(); // Envoi de l'article via l'API (axios)  \n\n    axios.post(this.articleUrl, formData, {\n      // Ajout des headers pour l'envoi de l'article via l'API (axios)\n      headers: {\n        // Ajout du token dans les headers de l'API (axios)\n        Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n      }\n    }).then(() => {\n      App.ReloadApp();\n    }) // Rafraichissement de la page (App)\n    .catch(error => {\n      console.error('Erreur lors de l\\'ajout d\\'un article!');\n      console.warn(error); // Affiche l'erreur dans la console\n    });\n  } // Gestion des events (OnChange)\n\n\n  OnChange(event) {\n    const myState = event.target.name; // Récupération du nom du champ (article ou image)\n\n    switch (myState) {\n      // Switch sur le nom du champ (article ou image)\n      case 'article':\n        // Si le champ est article (champ texte)\n        if (event.target.value.length) {\n          // Si la valeur du champ est non vide (article)\n          // Ajout de la class \"valid\" au champ article (champ valide) et suppression de la class \"invalid\" (champ invalide)\n          event.target.className = \"valid\"; // Modification de l'état du composant (isValid) (false = validation, true = pas de validation)\n\n          this.setState({\n            isValid: false\n          });\n        } else {\n          event.target.className = \"\"; // Suppression de la class \"valid\" au champ article (champ invalide)\n          // Modification de l'état du composant (isValid) (true = pas de validation, false = validation)\n\n          this.setState({\n            isValid: true\n          });\n        } // Modification de l'état du composant (valueArticle) (valeur du champ article)\n\n\n        this.setState({\n          valueArticle: event.target.value\n        });\n        break;\n\n      case 'image':\n        if (event.target.value) this.setState({\n          isValid: false\n        });else this.setState({\n          isValid: true\n        });\n        this.setState({\n          fileUpload: event.target.files[0]\n        });\n        break;\n\n      default:\n        console.error('Nothing here!');\n        break;\n    }\n  }\n\n  render() {\n    const {\n      userLogged\n    } = this.state;\n    const {\n      isValid,\n      valueArticle\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"addArticle\",\n        onSubmit: this.OnSubmitArticle,\n        disabled: isValid,\n        children: [/*#__PURE__*/_jsxDEV(Avatar, {\n          dataUser: { ...userLogged,\n            isProfile: false\n          }\n        }, 'avatar-' + userLogged.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"article\",\n          children: \"article\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"article\",\n          type: \"text\",\n          name: \"article\",\n          placeholder: 'Quoi de neuf, ' + userLogged.firstname + ' ?',\n          value: valueArticle,\n          onChange: this.OnChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"image\",\n          className: \"file-upload\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"hidden\",\n            children: \"upload\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 64\n          }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 102\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          id: \"image\",\n          name: \"image\",\n          onChange: this.OnChange,\n          type: \"file\",\n          label: \"UploadImage\",\n          accept: \".jpg,.jpeg,.png,.gif\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          \"aria-label\": \"sendarticle\",\n          disabled: isValid,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fa-solid fa-paper-plane\",\n            alt: \"sendarticle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"hidden\",\n          name: \"userId\",\n          value: userLogged.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"names":["React","axios","App","Avatar","AddForm","Component","constructor","props","state","userLogged","valueArticle","fileUpload","isValid","isLoading","articleUrl","OnSubmitArticle","bind","OnChange","event","formData","FormData","append","id","preventDefault","post","headers","Authorization","sessionStorage","getItem","then","ReloadApp","catch","error","console","warn","myState","target","name","value","length","className","setState","files","render","isProfile","firstname"],"sources":["C:/Users/Fd-Formation/Desktop/Groupomania/front/src/components/Article/AddForm.js"],"sourcesContent":["import React from \"react\"; // Importer react pour utiliser les fonctionnalités de react\nimport axios from \"axios\"; // Importer axios pour utiliser les fonctionnalités de axios\nimport App from \"../App\";  // Importer le composant App pour utiliser les fonctionnalités de react\nimport Avatar from \"../Avatar/Avatar\"; // Importer le composant Avatar pour utiliser les fonctionnalités de react\n\n\n// Initialisation du composant AddForm (Envoi d'un article).\nexport default class AddForm extends React.Component {\n    constructor(props) { // Constructeur du composant AddForm (Envoi d'un article).\n        super(props); // Appel du constructeur de la classe parente (React.Component).\n        this.state = { // Initialisation des variables de l'état du composant.\n            // données utilisateur\n            userLogged: props.userLogged, // Utilisateur connecté\n            valueArticle: '', // Valeur du champ article \n            fileUpload: null, // Fichier uploadé (image) \n            // Options\n            isValid: true,  // Validation du formulaire (true = pas de validation, false = validation)\n            isLoading: false,  // Chargement du formulaire (true = chargement, false = pas de chargement)\n        }\n        // Url de l'API pour l'envoi d'un article.\n        this.articleUrl = 'http://localhost:8080/api/articles';\n        // OnClick du bouton d'envoi d'article.\n        this.OnSubmitArticle = this.OnSubmitArticle.bind(this);\n        // OnChange du champ article (changement de la valeur).\n        this.OnChange = this.OnChange.bind(this);\n    }\n\n    // Gestion de l'envoi d'un article (OnSubmitArticle).\n    OnSubmitArticle(event) {\n        // Récupération des données de l'état du composant (userLogged, valueArticle, fileUpload) \n        const { userLogged, valueArticle, fileUpload } = this.state;\n        // L'objet contient des formes de valeur\n        const formData = new FormData();\n        formData.append(\"userId\", userLogged.id); // Ajout de l'id de l'utilisateur connecté dans l'objet\n        formData.append(\"article\", valueArticle); // Ajout du texte de l'article dans l'objet\n        formData.append(\"image\", fileUpload); // Ajout de l'image dans l'objet\n\n        // Annulation de l'envoi du formulaire (par défaut) et chargement du formulaire (true)\n        event.preventDefault();\n        // Envoi de l'article via l'API (axios)  \n        axios.post(this.articleUrl, formData, {\n            // Ajout des headers pour l'envoi de l'article via l'API (axios)\n            headers: {\n                // Ajout du token dans les headers de l'API (axios)\n                Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n            }\n        }).then(() => { App.ReloadApp(); }) // Rafraichissement de la page (App)\n            .catch(error => {\n                console.error('Erreur lors de l\\'ajout d\\'un article!');\n                console.warn(error); // Affiche l'erreur dans la console\n            });\n    }\n\n    // Gestion des events (OnChange)\n    OnChange(event) {\n        const myState = event.target.name; // Récupération du nom du champ (article ou image)\n        switch (myState) { // Switch sur le nom du champ (article ou image)\n            case 'article': // Si le champ est article (champ texte)\n                if (event.target.value.length) {  // Si la valeur du champ est non vide (article)\n                    // Ajout de la class \"valid\" au champ article (champ valide) et suppression de la class \"invalid\" (champ invalide)\n                    event.target.className = \"valid\";\n                    // Modification de l'état du composant (isValid) (false = validation, true = pas de validation)\n                    this.setState({ isValid: false });\n                }\n                else {\n                    event.target.className = \"\"; // Suppression de la class \"valid\" au champ article (champ invalide)\n                    // Modification de l'état du composant (isValid) (true = pas de validation, false = validation)\n                    this.setState({ isValid: true });\n                }\n                // Modification de l'état du composant (valueArticle) (valeur du champ article)\n                this.setState({ valueArticle: event.target.value });\n                break;\n            case 'image':\n                if (event.target.value)\n                    this.setState({ isValid: false });\n                else\n                    this.setState({ isValid: true });\n\n                this.setState({ fileUpload: event.target.files[0] });\n                break;\n            default:\n                console.error('Nothing here!');\n                break;\n        }\n    }\n\n    render() {\n        const { userLogged } = this.state;\n        const { isValid, valueArticle } = this.state;\n        return (<>\n            <form className=\"addArticle\" onSubmit={this.OnSubmitArticle} disabled={isValid}>\n                <Avatar key={'avatar-' + userLogged.id} dataUser={{ ...userLogged, isProfile: false }} />\n                <label htmlFor=\"article\">article</label>\n                <input id=\"article\" type='text' name=\"article\" placeholder={'Quoi de neuf, ' + userLogged.firstname + ' ?'}\n                    value={valueArticle} onChange={this.OnChange} />\n                <label htmlFor=\"image\" className=\"file-upload\"><span className=\"hidden\">upload</span><i className=\"fa-solid fa-image\"></i></label>\n                <input id=\"image\" name=\"image\" onChange={this.OnChange} type=\"file\" label=\"UploadImage\" accept=\".jpg,.jpeg,.png,.gif\"></input>\n                <button aria-label=\"sendarticle\" disabled={isValid}>\n                    <i className=\"fa-solid fa-paper-plane\" alt=\"sendarticle\"></i>\n                </button>\n                <input type='hidden' name=\"userId\" value={userLogged.id} />\n            </form>\n        </>)\n    }\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}