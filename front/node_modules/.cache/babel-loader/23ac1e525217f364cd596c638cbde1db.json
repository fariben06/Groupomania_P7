{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fd-Formation\\\\Desktop\\\\Groupomania\\\\front\\\\src\\\\components\\\\Admin\\\\Member.js\";\nimport React from \"react\"; // Importer React pour pouvoir utiliser les fonctionnalités de React\n\nimport axios from \"axios\"; // Importer axios pour pouvoir utiliser les fonctionnalités de axios\n\nimport App from \"../App\"; // Importer App pour pouvoir utiliser les fonctionnalités de App\n\nimport Avatar from \"../Avatar/Avatar\"; // Importer Avatar pour pouvoir utiliser les fonctionnalités de Avatar\n// Page Member (Admin) \n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Member extends React.Component {\n  constructor(props) {\n    // Constructeur du composant (Admin)\n    super(props); // Appel du constructeur de la classe parente (React.Component)\n\n    this.state = {\n      // On définit l'état du composant (Admin)\n      isLoading: false,\n      // Si le composant est en chargement (Admin)\n      userLogged: props.userLogged,\n      // Si l'utilisateur est connecté (Admin)\n      member: props.member // Données du membre (Admin) \n\n    };\n    this.userUrl = 'http://localhost:8080/api/user'; // Url du serveur (Admin) \n    // On récupère les données du membre (Admin) depuis le serveur (Admin)\n\n    this.OnSetAdmin = this.OnSetAdmin.bind(this); // On lie la fonction OnSetAdmin au composant (Admin)\n\n    this.OnDeleteUser = this.OnDeleteUser.bind(this); // On lie la fonction OnDeleteUser au composant (Admin)\n  } // Fonction de suppression d'un utilisateur (Admin)\n\n\n  async OnDeleteUser() {\n    const {\n      member\n    } = this.state; // Données du membre (Admin).\n\n    if (window.confirm(`Vous êtes sur le point de supprimer définitivement le compte de :\\n${member.id} - ${member.firstname} ${member.lastname}\\nÊtes vous sûre ?`)) {\n      await axios.delete(this.userUrl + '/' + member.id + '/' + 0, {\n        // On envoie les données au serveur pour les modifier (Admin).\n        headers: {\n          // On envoie le token d'authentification (Admin) pour autoriser la requête (Admin).\n          Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n        }\n      }).then(() => App.ReloadApp()); // On recharge la page (Admin).\n    }\n  } // Fonction de modification des droits (Admin)\n\n\n  async OnSetAdmin() {\n    const {\n      member\n    } = this.state; // Données du membre (Admin).\n\n    if (member.isAdmin) {\n      // Si le membre est admin (Admin) \n      let newData = { ...member,\n        isAdmin: 0\n      }; // On crée un nouveau membre avec les données du membre (Admin) et le nouveau statut admin (Admin)\n      // On demande confirmation de la suppression des droits admin (0) du membre \n\n      if (window.confirm(`Vous êtes sur le point de retirer les droits à :\\n${member.firstname} ${member.lastname}\\nÊtes vous sûre ?`)) {\n        await axios.put(this.userUrl + '/' + member.id + '/' + 0, newData, {\n          // On lui retire les droits admin (Admin) \n          headers: {\n            Authorization: \"Bearer \" + sessionStorage.getItem(\"token\") // On envoie le token d'authentification (Admin) pour autoriser la requête (Admin).\n\n          }\n        }).then(() => App.ReloadApp()); // On recharge la page (Admin).\n      }\n    }\n  }\n\n  render() {\n    // Rendu du composant (Admin) \n    const {\n      isLoading,\n      userLogged,\n      member\n    } = this.state; // Données de l'état membre (Admin).\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !isLoading && userLogged && member ?\n      /*#__PURE__*/\n      // Si l'utilisateur est connecté et que le membre existe \n      _jsxDEV(\"div\", {\n        className: \"member\",\n        children: [\"       \", /*#__PURE__*/_jsxDEV(Avatar, {\n          dataUser: { ...member,\n            isProfile: false\n          }\n        }, member.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), \"    \", /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [member.firstname, \" \", member.lastname]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), \"     \", /*#__PURE__*/_jsxDEV(\"div\", {\n          children: !member.isDelete ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\"      \", member.id === 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"     \", /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"edit actived\",\n                disabled: member.isAdmin,\n                \"aria-label\": \"editAdmin\",\n                value: member.id,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-solid fa-tower-observation\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 19\n                }, this), \"  \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [member.isAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\"    \", /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"edit actived\",\n                  \"aria-label\": \"editAdmin\",\n                  onClick: this.OnSetAdmin,\n                  children: [\"  \", /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa-solid fa-tower-observation\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 21\n                  }, this), \"        \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"edit\",\n                  \"aria-label\": \"editAdmin\",\n                  onClick: this.OnSetAdmin,\n                  children: /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa-solid fa-shield\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"delete\",\n                \"aria-label\": \"delUser\",\n                onClick: this.OnDeleteUser,\n                children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-solid fa-trash\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 19\n                }, this), \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"delete\",\n              \"aria-label\": \"delUser\",\n              onClick: this.OnDeleteUser,\n              children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fa-solid fa-trash\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 17\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, 'Member-' + member.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this) : 'Erreur lors du chargement du membre !'\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"names":["React","axios","App","Avatar","Member","Component","constructor","props","state","isLoading","userLogged","member","userUrl","OnSetAdmin","bind","OnDeleteUser","window","confirm","id","firstname","lastname","delete","headers","Authorization","sessionStorage","getItem","then","ReloadApp","isAdmin","newData","put","render","isProfile","isDelete"],"sources":["C:/Users/Fd-Formation/Desktop/Groupomania/front/src/components/Admin/Member.js"],"sourcesContent":["import React from \"react\"; // Importer React pour pouvoir utiliser les fonctionnalités de React\nimport axios from \"axios\"; // Importer axios pour pouvoir utiliser les fonctionnalités de axios\nimport App from \"../App\";  // Importer App pour pouvoir utiliser les fonctionnalités de App\nimport Avatar from \"../Avatar/Avatar\"; // Importer Avatar pour pouvoir utiliser les fonctionnalités de Avatar\n\n// Page Member (Admin) \nexport default class Member extends React.Component {\n  constructor(props) { // Constructeur du composant (Admin)\n    super(props); // Appel du constructeur de la classe parente (React.Component)\n    this.state = { // On définit l'état du composant (Admin)\n      isLoading: false, // Si le composant est en chargement (Admin)\n      userLogged: props.userLogged, // Si l'utilisateur est connecté (Admin)\n      member: props.member, // Données du membre (Admin) \n    };\n    this.userUrl = 'http://localhost:8080/api/user'; // Url du serveur (Admin) \n    // On récupère les données du membre (Admin) depuis le serveur (Admin)\n    this.OnSetAdmin = this.OnSetAdmin.bind(this);  // On lie la fonction OnSetAdmin au composant (Admin)\n    this.OnDeleteUser = this.OnDeleteUser.bind(this); // On lie la fonction OnDeleteUser au composant (Admin)\n  }\n\n  // Fonction de suppression d'un utilisateur (Admin)\n  async OnDeleteUser() {\n    const { member } = this.state; // Données du membre (Admin).\n    if (window.confirm(`Vous êtes sur le point de supprimer définitivement le compte de :\\n${member.id} - ${member.firstname} ${member.lastname}\\nÊtes vous sûre ?`)) {\n      await axios.delete(this.userUrl + '/' + member.id + '/' + 0, { // On envoie les données au serveur pour les modifier (Admin).\n        headers: { // On envoie le token d'authentification (Admin) pour autoriser la requête (Admin).\n          Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n        }\n      }).then(() => App.ReloadApp()); // On recharge la page (Admin).\n    }\n  }\n\n  // Fonction de modification des droits (Admin)\n  async OnSetAdmin() {\n    const { member } = this.state; // Données du membre (Admin).\n    if (member.isAdmin) {          // Si le membre est admin (Admin) \n      let newData = { ...member, isAdmin: 0 }; // On crée un nouveau membre avec les données du membre (Admin) et le nouveau statut admin (Admin)\n      // On demande confirmation de la suppression des droits admin (0) du membre \n      if (window.confirm(`Vous êtes sur le point de retirer les droits à :\\n${member.firstname} ${member.lastname}\\nÊtes vous sûre ?`)) {\n        await axios.put(this.userUrl + '/' + member.id + '/' + 0, newData, { // On lui retire les droits admin (Admin) \n          headers: {\n            Authorization: \"Bearer \" + sessionStorage.getItem(\"token\") // On envoie le token d'authentification (Admin) pour autoriser la requête (Admin).\n          }\n        }).then(() => App.ReloadApp()); // On recharge la page (Admin).\n      }\n    }\n  }\n\n  render() { // Rendu du composant (Admin) \n    const { isLoading, userLogged, member } = this.state; // Données de l'état membre (Admin).\n    return (<>\n      {!isLoading && userLogged && member ? ( // Si l'utilisateur est connecté et que le membre existe \n        <div className=\"member\" key={'Member-' + member.id}>       {/* On crée un composant membre */}\n          <Avatar key={member.id} dataUser={{ ...member, isProfile: false }} />    {/* On crée un avatar du membre */}\n          <p>{member.firstname} {member.lastname}</p>     {/* On affiche le nom du membre */}\n          <div>\n\n            {!member.isDelete ? (<>      {/* Si le membre n'est pas supprimé */}\n\n              {member.id === 1 ? (<>     {/* Si le membre est l'administrateur */}\n                {/* On ne peut pas le supprimer */}\n                <button className=\"edit actived\" disabled={member.isAdmin} aria-label=\"editAdmin\" value={member.id}>\n                  <i className=\"fa-solid fa-tower-observation\"></i>  {/* On affiche un icone de la tour de observation */}\n                </button>\n              </>) : (<>\n                {member.isAdmin ? (<>    {/* Si le membre est admin */}\n                  <button className=\"edit actived\" aria-label=\"editAdmin\" onClick={this.OnSetAdmin} >  {/* On affiche un bouton pour retirer les droits d'admin */}\n                    <i className=\"fa-solid fa-tower-observation\"></i>        {/* On affiche un icone de la tour de observation */}\n                  </button>\n                </>) : (<>\n                  <button className=\"edit\" aria-label=\"editAdmin\" onClick={this.OnSetAdmin} >\n                    <i className=\"fa-solid fa-shield\"></i>\n                  </button>\n                </>)}\n                {/* On affiche un bouton pour supprimer le membre */}\n                <button className=\"delete\" aria-label=\"delUser\" onClick={this.OnDeleteUser} >\n                  <i className=\"fa-solid fa-trash\"></i> {/* On affiche un icone de la poubelle */}\n                </button>\n              </>)}\n\n            </>) : (<>\n              {/* Si le membre est supprimé */} {/* On affiche un message de confirmation */}\n              <button className=\"delete\" aria-label=\"delUser\" onClick={this.OnDeleteUser} >\n                <i className=\"fa-solid fa-trash\"></i> {/* On affiche un icone de la poubelle */}\n              </button>\n            </>)}\n\n\n          </div>\n        </div>\n      ) : 'Erreur lors du chargement du membre !'}\n    </>)\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}