{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fd-Formation\\\\Desktop\\\\Groupomania\\\\front\\\\src\\\\components\\\\Article\\\\Article.js\";\nimport React from \"react\"; // Importer react pour utiliser les fonctionnalités de react\n\nimport axios from \"axios\"; // Importer axios pour utiliser les fonctionnalités de axios\n\nimport App from \"../App\"; // Importer le composant App pour utiliser les fonctionnalités de react\n\nimport Avatar from \"../Avatar/Avatar\"; // Importer le composant Avatar pour utiliser les fonctionnalités de react\n\nimport Comments from \"../Comments/Comments\"; // Importer le composant Comments pour utiliser les fonctionnalités de react\n\nimport Options from \"../Options/Options\"; // Importer le composant Options pour utiliser les fonctionnalités de react\n\nimport \"./Article.css\"; // Importer le fichier css Article.css\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default class Article extends React.Component {\n  // Afficher/Cacher le formulaire d'édition.\n  constructor(props) {\n    // Constructeur de la classe Article.\n    super(props); // Appel du constructeur de la classe parente.\n\n    this.state = {\n      // Définition des variables de la classe.\n      // données de l'article\n      article: props.dataArticle,\n      // Article à afficher dans le composant.\n      author: props.dataArticle.user,\n      // Auteur de l'article à afficher dans le composant.\n      userLogged: props.userLogged,\n      // Utilisateur connecté dans le composant.\n      valueArticle: props.dataArticle.article,\n      // Contenu de l'article à afficher dans le composant.\n      likes: props.dataArticle.likes,\n      // Likes de l'article à afficher dans le composant.\n      fileUpload: null,\n      // Fichier à uploader dans le composant.\n      // Commentaires de l'article.\n      comments: props.dataArticle.comments,\n      // Commentaires de l'article.\n      commentsLoaded: false,\n      // Commentaires chargés.\n      // Options de l'article.\n      editArticle: false,\n      // Formulaire d'édition d'article caché. (false = caché).\n      isEdited: false,\n      // Article édité. (false = non édité).\n      isClicked: false,\n      // Options affichées. (false = caché).\n      showComments: false // Commentaires affichés. (false = caché).\n\n    };\n    this.totalLike = props.dataArticle.likes.length; // Nombre de likes de l'article. (initialisé à 0).\n\n    this.totalComments = props.dataArticle.comments.length; // Nombre de commentaires de l'article. (initialisé à 0).\n    // Request Url de l'article.\n\n    this.commentsUrl = 'http://localhost:8080/api/comments?article=' + this.state.article.id; // Url des commentaires de l'article (articleId).\n\n    this.articleUrl = 'http://localhost:8080/api/articles/'; // Url de l'article (articleId).\n\n    this.likeUrl = 'http://localhost:8080/api/likes'; // Url des likes de l'article (articleId).\n    // Form control\n\n    this.onCommentsClick = this.onCommentsClick.bind(this); // Afficher/Cacher les commentaires. (bind pour lier l'évènement à la classe).\n\n    this.onLikesClick = this.onLikesClick.bind(this); // Like/Unlike l'article. (bind pour lier l'évènement à la classe).\n\n    this.onOptionsClick = this.onOptionsClick.bind(this); // Afficher/Cacher le formulaire d'édition. (bind pour lier l'évènement à la classe).\n\n    this.onEditClick = this.onEditClick.bind(this); // Editer l'article. (bind pour lier l'évènement à la classe).\n\n    this.OnChange = this.OnChange.bind(this); // Changer le contenu de l'article. (bind pour lier l'évènement à la classe).\n\n    this.onDeleteImage = this.onDeleteImage.bind(this); // Supprimer l'image de l'article. (bind pour lier l'évènement à la classe).\n\n    this.onDeleteClick = this.onDeleteClick.bind(this); // Supprimer l'article. (bind pour lier l'évènement à la classe).\n  } // Afficher/Cacher les commentaires de l'article.\n\n\n  async onCommentsClick(event) {\n    // Récupération des données de l'état. (showComments = afficher/cacher les commentaires).\n    const {\n      showComments,\n      commentsLoaded\n    } = this.state; // Switch pour afficher/cacher les commentaires de l'article.\n\n    switch (showComments) {\n      // Masquer les commentaires de l'article.\n      default:\n      case true:\n        // Masquer les commentaires de l'article (false = caché). (true = affiché).\n        event.target.classList.remove('active'); // Supprimer la classe active du bouton pour afficher les commentaires.\n\n        this.setState({\n          showComments: false\n        }); // Mettre à jour l'état de l'article (showComments = false).\n\n        break;\n      // Sortie de la condition.\n      // Afficher les commentaires de l'article.\n\n      case false:\n        // Afficher les commentaires de l'article (false = caché). (true = affiché).\n        if (!commentsLoaded) {\n          // Si les commentaires n'ont pas encore été chargés.\n          let comments = await axios.get(this.commentsUrl, {\n            // Récupération des commentaires de l'article (articleId).\n            headers: {\n              // En-tête de la requête.\n              Authorization: \"Bearer \" + sessionStorage.getItem(\"token\") // Jeton d'authentification.\n\n            }\n          }).then(res => {\n            // Si la réponse de la requête est correcte (200) ... (res = réponse de la requête).\n            if (res.status === 204) return [];\n            return res.data.comments; // Retourner les commentaires de l'article.\n          }); // Mettre à jour l'état de l'article (comments = commentaires de l'article).\n\n          this.setState({\n            comments: comments\n          }); // Si les commentaires existent, mettre à jour l'état de l'article (commentsLoaded = true).\n\n          if (comments) this.setState({\n            commentsLoaded: true\n          });\n        } // Ajouter la classe active du bouton pour cacher les commentaires (afficher les commentaires).\n\n\n        event.target.classList.add('active'); // Montrer les commentaires de l'article (showComments = true).\n\n        this.setState({\n          showComments: true\n        });\n        break;\n      // Sortie de la condition.\n    }\n  } // J'aime/n'aime pas l'article (like/unlike).\n\n\n  async onLikesClick(event) {\n    // Ajouter/Supprimer un like à l'article.\n    // Récupération des données de l'état (article = article, userLogged = utilisateur connecté).\n    const {\n      article,\n      userLogged\n    } = this.state;\n    const postLike = {\n      // Données à poster pour le like de l'article.\n      userId: userLogged.id,\n      // Id de l'utilisateur connecté.\n      articleId: article.id // Id de l'article.\n\n    };\n    this.setState({\n      isLoading: true\n    }); // Mettre à jour l'état de l'article (isLoading = true).\n\n    await axios.post(this.likeUrl, postLike, {\n      // Ajout d'un like à l'article (articleId) (postLike = données à poster) \n      headers: {\n        // En-tête de la requête.\n        Authorization: \"Bearer \" + sessionStorage.getItem(\"token\") // Jeton d'authentification (token). (sessionStorage.getItem(\"token\") = récupération du token).\n\n      }\n    }).then(res => {\n      var _res$data;\n\n      // Mettre à jour la cible de la classe (target = cible de la classe).\n      // Ajouter la classe active au bouton pour montrer que l'article a été liké (like = true).\n      if (!((_res$data = res.data) !== null && _res$data !== void 0 && _res$data.length)) event.target.classList.add(\"active\"); // Supprimer la classe active du bouton pour montrer que l'article n'a pas été liké (like = false).\n      else event.target.classList.remove(\"active\"); // Mettre à jour l'article.\n\n      this.updateArticle();\n    });\n  } // Actualise les données de l'article pour les likes et les commentaires (afficher les commentaires).\n\n\n  updateArticle() {\n    const {\n      article\n    } = this.state; // Récupération des données de l'article.\n\n    axios.get(this.articleUrl, {\n      headers: {\n        // En-tête de la requête.\n        // Jeton d'authentification. (sessionStorage.getItem(\"token\") = récupération du token).\n        Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n      }\n    }).then(res => {\n      // Pour chaque article ... (result = article). (res.data.articles = articles).\n      res.data.articles.forEach(result => {\n        // Si l'article est identique à l'article de l'état ... (result.id = id de l'article).\n        if (result.id === article.id) {\n          // Mettre à jour l'état de l'article (article = article). (result = article).\n          this.setState({\n            article: result\n          }); // Mettre à jour le nombre de likes de l'article (totalLike = nombre de likes).\n\n          this.totalLike = result.likes.length;\n        }\n      });\n    });\n  } // Mise en page des options de l'article.\n\n\n  setOptions() {\n    // Récupération des données de l'état. (article = article, userLogged = utilisateur connecté).\n    // likes = likes de l'article. (userLogged = utilisateur connecté).\n    const {\n      likes,\n      userLogged\n    } = this.state; // Variable pour savoir si l'article a été liké ou non.\n\n    let isActive = ''; // Pour chaque like ... (like = like).\n\n    likes.forEach(like => {\n      // Si l'utilisateur connecté a liké l'article, mettre la classe active.\n      if (like.userId === userLogged.id) isActive = \"active\";\n    }); // Mise en page des options de l'article (options = options de l'article).\n\n    return /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"options\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"like \" + isActive,\n        onClick: this.onLikesClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-heart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 73\n        }, this), \" J'aime\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        className: \"comments\",\n        onClick: this.onCommentsClick,\n        children: [/*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fa-solid fa-comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 65\n        }, this), \" Commentaires\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this);\n  } // Afficher/Cacher les options de l'article.\n\n\n  async onOptionsClick(event) {\n    const {\n      isClicked\n    } = this.state; // Récupération de l'état (isClicked = est-il cliqué?).\n\n    switch (isClicked) {\n      // Selon le statut ... (isClicked = est-il cliqué?). \n      default: // Par défaut ... (isClicked = est-il cliqué?).\n\n      case true:\n        // Si est-il cliqué ... (isClicked = est-il cliqué?).\n        this.setState({\n          isClicked: false\n        }); // Mettre à jour l'état (isClicked = false). (isClicked = est-il cliqué?).\n\n        break;\n      // Sortie de la condition.\n\n      case false:\n        // Si n'est pas cliqué ... (isClicked = est-il cliqué?).\n        this.setState({\n          isClicked: true\n        }); // Mettre à jour l'état (isClicked = true). (isClicked = est-il cliqué?).\n\n        break;\n      // Sortie de la condition.\n    }\n  } // Modification d'un article (modifier l'article).\n\n\n  async onEditClick(event) {\n    event.preventDefault(); // Empêcher le comportement par défaut du navigateur \n    // Récupération des données de l'état (valueArticle = contenu de l'article, fileUpload = fichier uploadé).\n\n    const {\n      valueArticle,\n      fileUpload\n    } = this.state; // Récupération des données de l'état (article = article, editArticle = article à modifier, isEdited = est-il modifié?).\n\n    const {\n      article,\n      editArticle,\n      isEdited\n    } = this.state; // Si l'article à modifier existe ... (editArticle = article à modifier).\n\n    if (editArticle) {\n      if (isEdited) {\n        // Si est-il modifié ... (isEdited = est-il modifié?).\n        const formData = new FormData(); // Création d'un nouveau formulaire (formData = formulaire).\n\n        formData.set(\"message\", valueArticle); // Ajout du contenu de l'article (valueArticle = contenu de l'article).\n        // Si un fichier a été uploadé ... (fileUpload = fichier uploadé).\n\n        if (fileUpload != null) formData.append(\"image\", fileUpload);\n        await axios.put(this.articleUrl + article.id, formData, {\n          // Modification de l'article (article.id = id de l'article). (formData = formulaire).\n          headers: {\n            // En-tête de la requête.\n            // Jeton d'authentification (token). (sessionStorage.getItem(\"token\") = récupération du token).\n            Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n          }\n        }).then(() => {\n          // Si la modification a réussi ... \n          this.setState({\n            editArticle: false\n          }); // Mettre à jour l'état (editArticle = false). (editArticle = article à modifier).\n\n          App.ReloadApp(); // Rafraichir la page (App = application).\n        });\n      } else this.setState({\n        editArticle: false\n      });\n    } else {\n      this.setState({\n        editArticle: true\n      });\n    }\n  } // Gestion des events\n\n\n  OnChange(event) {\n    const {\n      article\n    } = this.state; // Récupération des données de l'état (article = article).\n\n    const myCase = event.target.name; // Récupération du nom de l'input (myCase = nom de l'input).\n\n    switch (myCase) {\n      // Selon le nom de l'input ... (myCase = nom de l'input).\n      case 'message':\n        // Si le nom de l'input est message ... (myCase = nom de l'input).\n        // Mettre à jour l'état (isEdited = true). (article.article = contenu de l'article). (event.target.value = contenu de l'input).\n        if (article.article !== event.target.value) this.setState({\n          isEdited: true\n        }); // Mettre à jour l'état (isEdited = false). (article.article = contenu de l'article). (event.target.value = contenu de l'input).\n        else this.setState({\n          isEdited: false\n        }); // Mettre à jour l'état (valueArticle = contenu de l'input). (event.target.value = contenu de l'input).\n\n        this.setState({\n          valueArticle: event.target.value\n        });\n        break;\n      // Sortie de la condition.\n\n      case 'picture':\n        // Si le nom de l'input est picture ... (myCase = nom de l'input).\n        // console.log(event.target.files[0]); // Afficher le fichier uploadé  \n        console.log(event.target.files[0]); // Mettre à jour l'état (isEdited = true). (fileUpload = fichier uploadé). (event.target.files[0] = fichier uploadé).\n\n        this.setState({\n          isEdited: true,\n          fileUpload: event.target.files[0]\n        });\n        break;\n\n      default:\n        console.error('Nothing here!');\n        break;\n    }\n  } // Suppression d'une image (supprimer l'image).\n\n\n  async onDeleteImage() {\n    const {\n      article\n    } = this.state; // Récupération des données de l'état (article = article).\n\n    if (window.confirm('Vous êtes sur le point de supprimer votre image...\\nEtes vous sure ?')) {\n      // Suppression de l'image (article.id = id de l'article). (1 = id de l'image).\n      await axios.delete(this.articleUrl + article.id + '/' + 1, {\n        headers: {\n          // Jeton d'authentification (token). (sessionStorage.getItem(\"token\") = récupération du token).\n          Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n        }\n      }).then(() => App.ReloadApp()); // Rafraichir la page (App = application).\n    }\n  } // Suppression d'un article et redirection vers la page d'accueil.\n\n\n  async onDeleteClick() {\n    const {\n      article\n    } = this.state; // Article à supprimer.\n\n    if (window.confirm('Vous êtes sur le point de supprimer cet article...\\nÊtes vous sûre ?')) {\n      // Suppression de l'article dans la base de données.\n      await axios.delete(this.articleUrl + article.id + '/' + 0, {\n        // 0 = supprimer l'article et ses commentaires.\n        headers: {\n          // Ajout du token dans les headers.\n          Authorization: \"Bearer \" + sessionStorage.getItem(\"token\") // Ajout du token dans les headers de la requête.\n\n        }\n      }).then(() => App.ReloadApp()); // Rafraichissement de la page.\n    }\n  } // Convertisseur de date en string pour l'affichage de la date de publication de l'article dans le composant.\n\n\n  convertDate() {\n    const {\n      article\n    } = this.state; // Récupération de l'article.\n\n    const start = new Date(article.postDate).getTime(); // Récupération de la date de publication de l'article.\n\n    const current = Date.now(); // Récupération de la date actuelle du système.\n\n    const result = new Date(current - start); // Calcul de la différence entre la date de publication de l'article et la date actuelle.\n\n    let since = new Date(result); // Conversion de la différence en date pour l'affichage dans le composant.\n\n    if (since.getFullYear() <= 1970) {\n        // Si l'année de la différence est inférieure à 1970, on affiche \"Il y a moins de 1 an\" (1 an = 365 jours).\n        if (since.getMonth() + 1 <= 1) {\n            // Si le mois de la différence est inférieur à 1, on affiche \"Il y a moins de 1 mois\" (1 mois = 30 jours).\n            if (since.getDate() <= 1) {\n                // Si le jour de la différence est inférieur à 1, on affiche \"Il y a moins de 1 jour\" (1 jour = 24 heures).\n                if (since.getHours() <= 1) {\n                    // Si l'heure de la différence est inférieur à 1, on affiche \"Il y a moins de 1 heure\" (1 heure = 60 minutes).\n                    if (since.getMinutes() < 1) // Si les minutes de la différence sont inférieures à 1, on affiche \"Il y a moins de 1 minute\" (1 minute = 60 secondes).\n                      since = new Date(result).getSeconds() + 'sec.'; // Si les secondes de la différence sont inférieures à 1, on affiche \"Il y a moins de 1 seconde\" (1 seconde = 1000 millisecondes).\n                    else since = since.getMinutes() + 'min.'; // Sinon, on affiche le nombre de minutes de la différence entre la date de publication de l'article et la date actuelle.\n\n                } else since = since.getHours() + 'h.'; // Sinon, on affiche le nombre d'heures de la différence entre la date de publication de l'article et la date actuelle.\n\n            } else since = since.getDate() + 'j.'; // Sinon, on affiche le nombre de jours de la différence entre la date de publication de l'article et la date actuelle.\n\n        } else since = since.getMonth() + 1 + 'm.'; // Sinon, on affiche le nombre de mois de la différence entre la date de publication de l'article et la date actuelle.\n\n    } else since = since.getFullYear() + 'y.'; // Sinon, on affiche le nombre d'années de la différence entre la date de publication de l'article et la date actuelle.\n\n    return `${since}`; // Retourne la date de publication de l'article.\n  }\n\n  render() {\n    // Rendu du composant.\n    // Récupération des données de l'état (editArticle = édition de l'article, article = article,\n    // likes = likes de l'article, author = auteur de l'article, userLogged = utilisateur connecté).\n    const {\n      editArticle,\n      article,\n      likes,\n      author,\n      userLogged\n    } = this.state; // Récupération de l'état (isClicked = clique sur le bouton de like).\n\n    const {\n      isClicked\n    } = this.state; // Récupération de l'état (showComments = affichage des commentaires, comments = commentaires, \n    // commentsLoaded = chargement des commentaires).\n\n    const {\n      showComments,\n      comments,\n      commentsLoaded\n    } = this.state; // Récupération des données de l'état (valueArticle = contenu de l'article, fileUpload = image de l'article).\n\n    const {\n      valueArticle,\n      fileUpload\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !editArticle ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [\"             \", article ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [\"                \", /*#__PURE__*/_jsxDEV(\"article\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"article-author\",\n              children: [\"                              \", /*#__PURE__*/_jsxDEV(Avatar, {\n                dataUser: { ...author,\n                  isProfile: false\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 15\n              }, this), \"       \", /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"author-infos\",\n                children: [\"                              \", /*#__PURE__*/_jsxDEV(\"h3\", {\n                  children: [author.firstname, \" \", author.lastname]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 17\n                }, this), \"             \", /*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: [author.task.tasks, \" | \", /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa-solid fa-clock\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 302,\n                    columnNumber: 43\n                  }, this), \" \", this.convertDate()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 15\n              }, this), article.authorId === userLogged.id || userLogged.isAdmin ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"article-options\",\n                  onClick: this.onOptionsClick,\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa-solid fa-ellipsis\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 308,\n                    columnNumber: 19\n                  }, this), isClicked ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [\"     \", /*#__PURE__*/_jsxDEV(Options, {\n                      onEditClick: this.onEditClick,\n                      onDeleteClick: this.onDeleteClick,\n                      dataArticle: article,\n                      for: 'Article'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 312,\n                      columnNumber: 21\n                    }, this)]\n                  }, void 0, true) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 307,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"article-no-options\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 316,\n                  columnNumber: 17\n                }, this), \"  \"]\n              }, void 0, true)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: article.article\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 13\n            }, this), \"                                \", article.image === 'none' ? null : /*#__PURE__*/_jsxDEV(\"img\", {\n              src: article.image,\n              alt: \"postedImage\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 48\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"infos-total\",\n              children: [likes && this.totalLike >= 1 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"like\",\n                  children: [/*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa-solid fa-heart\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 37\n                  }, this), \" \", this.totalLike, \" J'aime\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false) : null, comments.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"comment\",\n                  children: [comments.length, \" commentaire(s) \", /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa-solid fa-comment\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 335,\n                    columnNumber: 73\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 13\n            }, this), this.setOptions(), \"        \", showComments ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [\"        \", commentsLoaded ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [\"    \", /*#__PURE__*/_jsxDEV(Comments, {\n                  userLogged: userLogged,\n                  articleId: article.id,\n                  comments: comments\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n            }, void 0, true) : null, \"      \"]\n          }, article.id + '-article', true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"article\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"article-author\",\n            children: [\"                             \", /*#__PURE__*/_jsxDEV(Avatar, {\n              dataUser: { ...author,\n                isProfile: false\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 13\n            }, this), \"      \", /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"author-infos\",\n              children: [\"                             \", /*#__PURE__*/_jsxDEV(\"h3\", {\n                children: [author.firstname, \" \", author.lastname]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 359,\n                columnNumber: 15\n              }, this), \"            \", /*#__PURE__*/_jsxDEV(\"h4\", {\n                children: [author.task.tasks, \" | \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-solid fa-clock\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 362,\n                  columnNumber: 41\n                }, this), \" \", this.convertDate()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"article-no-options\",\n              children: [\"                       \", /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: this.onEditClick,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"hidden\",\n                  children: \"confirm edit article\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 50\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-solid fa-check\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 366,\n                  columnNumber: 102\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 15\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 364,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.onEditClick,\n            children: [\"                         \", /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"message\",\n              children: \"message\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 13\n            }, this), \"                 \", /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"message\",\n              type: \"text\",\n              name: \"message\",\n              placeholder: \"Un petit mot ?\",\n              defaultValue: valueArticle,\n              onChange: this.OnChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"article-edit-avatar\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                htmlFor: \"picture\",\n                className: \"file-upload\",\n                onChange: this.OnChange,\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"hidden\",\n                  children: \"picture\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 17\n                }, this), fileUpload ? /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-solid fa-xmark\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 31\n                }, this) : /*#__PURE__*/_jsxDEV(\"i\", {\n                  className: \"fa-solid fa-image\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 380,\n                  columnNumber: 71\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 378,\n                columnNumber: 15\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                id: \"picture\",\n                name: \"picture\",\n                type: \"file\",\n                label: \"UploadImage\",\n                accept: \".jpg,.jpeg,.png,.gif\",\n                onChange: this.OnChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 15\n              }, this), article.image !== 'none' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  label: \"delAvatar\",\n                  onClick: this.onDeleteImage,\n                  children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"hidden\",\n                    children: \"delete Avatar\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 386,\n                    columnNumber: 19\n                  }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                    className: \"fa-solid fa-trash\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 387,\n                    columnNumber: 19\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 17\n                }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: article.image,\n                  alt: \"postedImage\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 389,\n                  columnNumber: 17\n                }, this)]\n              }, void 0, true) : null]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 377,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 370,\n            columnNumber: 11\n          }, this)]\n        }, 'edit-article-' + article.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 9\n        }, this)\n      }, void 0, false)\n    }, void 0, false);\n  }\n\n}","map":{"version":3,"names":["React","axios","App","Avatar","Comments","Options","Article","Component","constructor","props","state","article","dataArticle","author","user","userLogged","valueArticle","likes","fileUpload","comments","commentsLoaded","editArticle","isEdited","isClicked","showComments","totalLike","length","totalComments","commentsUrl","id","articleUrl","likeUrl","onCommentsClick","bind","onLikesClick","onOptionsClick","onEditClick","OnChange","onDeleteImage","onDeleteClick","event","target","classList","remove","setState","get","headers","Authorization","sessionStorage","getItem","then","res","status","data","add","postLike","userId","articleId","isLoading","post","updateArticle","articles","forEach","result","setOptions","isActive","like","preventDefault","formData","FormData","set","append","put","ReloadApp","myCase","name","value","console","log","files","error","window","confirm","delete","convertDate","start","Date","postDate","getTime","current","now","since","getFullYear","getMonth","getDate","getHours","getMinutes","getSeconds","render","isProfile","firstname","lastname","task","tasks","authorId","isAdmin","image"],"sources":["C:/Users/Fd-Formation/Desktop/Groupomania/front/src/components/Article/Article.js"],"sourcesContent":["import React from \"react\"; // Importer react pour utiliser les fonctionnalités de react\nimport axios from \"axios\"; // Importer axios pour utiliser les fonctionnalités de axios\nimport App from \"../App\";  // Importer le composant App pour utiliser les fonctionnalités de react\nimport Avatar from \"../Avatar/Avatar\"; // Importer le composant Avatar pour utiliser les fonctionnalités de react\nimport Comments from \"../Comments/Comments\"; // Importer le composant Comments pour utiliser les fonctionnalités de react\nimport Options from \"../Options/Options\"; // Importer le composant Options pour utiliser les fonctionnalités de react\nimport \"./Article.css\"; // Importer le fichier css Article.css\n\n\nexport default class Article extends React.Component { // Afficher/Cacher le formulaire d'édition.\n  constructor(props) { // Constructeur de la classe Article.\n    super(props); // Appel du constructeur de la classe parente.\n    this.state = { // Définition des variables de la classe.\n      // données de l'article\n      article: props.dataArticle, // Article à afficher dans le composant.\n      author: props.dataArticle.user, // Auteur de l'article à afficher dans le composant.\n      userLogged: props.userLogged, // Utilisateur connecté dans le composant.\n      valueArticle: props.dataArticle.article, // Contenu de l'article à afficher dans le composant.\n      likes: props.dataArticle.likes, // Likes de l'article à afficher dans le composant.\n      fileUpload: null, // Fichier à uploader dans le composant.\n      // Commentaires de l'article.\n      comments: props.dataArticle.comments,  // Commentaires de l'article.\n      commentsLoaded: false, // Commentaires chargés.\n      // Options de l'article.\n      editArticle: false, // Formulaire d'édition d'article caché. (false = caché).\n      isEdited: false,   // Article édité. (false = non édité).\n      isClicked: false, // Options affichées. (false = caché).\n      showComments: false // Commentaires affichés. (false = caché).\n    };\n    this.totalLike = props.dataArticle.likes.length; // Nombre de likes de l'article. (initialisé à 0).\n    this.totalComments = props.dataArticle.comments.length; // Nombre de commentaires de l'article. (initialisé à 0).\n    // Request Url de l'article.\n    this.commentsUrl = 'http://localhost:8080/api/comments?article=' + this.state.article.id; // Url des commentaires de l'article (articleId).\n    this.articleUrl = 'http://localhost:8080/api/articles/'; // Url de l'article (articleId).\n    this.likeUrl = 'http://localhost:8080/api/likes'; // Url des likes de l'article (articleId).\n    // Form control\n    this.onCommentsClick = this.onCommentsClick.bind(this); // Afficher/Cacher les commentaires. (bind pour lier l'évènement à la classe).\n    this.onLikesClick = this.onLikesClick.bind(this); // Like/Unlike l'article. (bind pour lier l'évènement à la classe).\n    this.onOptionsClick = this.onOptionsClick.bind(this); // Afficher/Cacher le formulaire d'édition. (bind pour lier l'évènement à la classe).\n    this.onEditClick = this.onEditClick.bind(this); // Editer l'article. (bind pour lier l'évènement à la classe).\n    this.OnChange = this.OnChange.bind(this); // Changer le contenu de l'article. (bind pour lier l'évènement à la classe).\n    this.onDeleteImage = this.onDeleteImage.bind(this); // Supprimer l'image de l'article. (bind pour lier l'évènement à la classe).\n    this.onDeleteClick = this.onDeleteClick.bind(this); // Supprimer l'article. (bind pour lier l'évènement à la classe).\n  }\n\n  // Afficher/Cacher les commentaires de l'article.\n  async onCommentsClick(event) {\n    // Récupération des données de l'état. (showComments = afficher/cacher les commentaires).\n    const { showComments, commentsLoaded } = this.state;\n    // Switch pour afficher/cacher les commentaires de l'article.\n    switch (showComments) {\n      // Masquer les commentaires de l'article.\n      default:\n      case true:  // Masquer les commentaires de l'article (false = caché). (true = affiché).\n        event.target.classList.remove('active'); // Supprimer la classe active du bouton pour afficher les commentaires.\n        this.setState({ showComments: false }); // Mettre à jour l'état de l'article (showComments = false).\n        break; // Sortie de la condition.\n      // Afficher les commentaires de l'article.\n      case false: // Afficher les commentaires de l'article (false = caché). (true = affiché).\n        if (!commentsLoaded) { // Si les commentaires n'ont pas encore été chargés.\n          let comments = await axios.get(this.commentsUrl, { // Récupération des commentaires de l'article (articleId).\n            headers: { // En-tête de la requête.\n              Authorization: \"Bearer \" + sessionStorage.getItem(\"token\") // Jeton d'authentification.\n            }\n          })\n            .then((res) => {\n              // Si la réponse de la requête est correcte (200) ... (res = réponse de la requête).\n              if (res.status === 204) return [];\n              return res.data.comments; // Retourner les commentaires de l'article.\n            });\n          // Mettre à jour l'état de l'article (comments = commentaires de l'article).\n          this.setState({ comments: comments });\n          // Si les commentaires existent, mettre à jour l'état de l'article (commentsLoaded = true).\n          if (comments) this.setState({ commentsLoaded: true });\n        }\n        // Ajouter la classe active du bouton pour cacher les commentaires (afficher les commentaires).\n        event.target.classList.add('active');\n        // Montrer les commentaires de l'article (showComments = true).\n        this.setState({ showComments: true });\n        break; // Sortie de la condition.\n    }\n  }\n\n\n  // J'aime/n'aime pas l'article (like/unlike).\n  async onLikesClick(event) { // Ajouter/Supprimer un like à l'article.\n    // Récupération des données de l'état (article = article, userLogged = utilisateur connecté).\n    const { article, userLogged } = this.state;\n    const postLike = { // Données à poster pour le like de l'article.\n      userId: userLogged.id, // Id de l'utilisateur connecté.\n      articleId: article.id  // Id de l'article.\n    }\n    this.setState({ isLoading: true }); // Mettre à jour l'état de l'article (isLoading = true).\n    await axios.post(this.likeUrl, postLike, { // Ajout d'un like à l'article (articleId) (postLike = données à poster) \n      headers: { // En-tête de la requête.\n        Authorization: \"Bearer \" + sessionStorage.getItem(\"token\") // Jeton d'authentification (token). (sessionStorage.getItem(\"token\") = récupération du token).\n      }\n    }).then((res) => {\n\n      // Mettre à jour la cible de la classe (target = cible de la classe).\n      // Ajouter la classe active au bouton pour montrer que l'article a été liké (like = true).\n      if (!res.data?.length) event.target.classList.add(\"active\");\n      // Supprimer la classe active du bouton pour montrer que l'article n'a pas été liké (like = false).\n      else event.target.classList.remove(\"active\");\n      // Mettre à jour l'article.\n      this.updateArticle();\n    });\n  }\n\n  // Actualise les données de l'article pour les likes et les commentaires (afficher les commentaires).\n  updateArticle() {\n    const { article } = this.state;\n    // Récupération des données de l'article.\n    axios.get(this.articleUrl, {\n      headers: { // En-tête de la requête.\n        // Jeton d'authentification. (sessionStorage.getItem(\"token\") = récupération du token).\n        Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n      }\n    }).then((res) => {\n      // Pour chaque article ... (result = article). (res.data.articles = articles).\n      res.data.articles.forEach((result) => {\n        // Si l'article est identique à l'article de l'état ... (result.id = id de l'article).\n        if (result.id === article.id) {\n          // Mettre à jour l'état de l'article (article = article). (result = article).\n          this.setState({ article: result });\n          // Mettre à jour le nombre de likes de l'article (totalLike = nombre de likes).\n          this.totalLike = result.likes.length;\n        }\n      });\n    })\n  }\n\n  // Mise en page des options de l'article.\n  setOptions() {\n    // Récupération des données de l'état. (article = article, userLogged = utilisateur connecté).\n    // likes = likes de l'article. (userLogged = utilisateur connecté).\n    const { likes, userLogged } = this.state;\n    // Variable pour savoir si l'article a été liké ou non.\n    let isActive = '';\n    // Pour chaque like ... (like = like).\n    likes.forEach(like => {\n      // Si l'utilisateur connecté a liké l'article, mettre la classe active.\n      if (like.userId === userLogged.id) isActive = \"active\";\n    });\n\n    // Mise en page des options de l'article (options = options de l'article).\n    return (\n      <ul className=\"options\">\n        <li className={\"like \" + isActive} onClick={this.onLikesClick} ><i className=\"fa-solid fa-heart\"></i> J'aime</li>\n        <li className=\"comments\" onClick={this.onCommentsClick}><i className=\"fa-solid fa-comment\"></i> Commentaires</li>\n      </ul>\n    );\n  }\n\n  // Afficher/Cacher les options de l'article.\n  async onOptionsClick(event) {\n    const { isClicked } = this.state; // Récupération de l'état (isClicked = est-il cliqué?).\n    switch (isClicked) { // Selon le statut ... (isClicked = est-il cliqué?). \n      default: // Par défaut ... (isClicked = est-il cliqué?).\n      case true: // Si est-il cliqué ... (isClicked = est-il cliqué?).\n        this.setState({ isClicked: false }); // Mettre à jour l'état (isClicked = false). (isClicked = est-il cliqué?).\n        break; // Sortie de la condition.\n\n      case false: // Si n'est pas cliqué ... (isClicked = est-il cliqué?).\n        this.setState({ isClicked: true }); // Mettre à jour l'état (isClicked = true). (isClicked = est-il cliqué?).\n        break; // Sortie de la condition.\n    }\n  }\n\n  // Modification d'un article (modifier l'article).\n  async onEditClick(event) {\n    event.preventDefault(); // Empêcher le comportement par défaut du navigateur \n    // Récupération des données de l'état (valueArticle = contenu de l'article, fileUpload = fichier uploadé).\n    const { valueArticle, fileUpload } = this.state;\n    // Récupération des données de l'état (article = article, editArticle = article à modifier, isEdited = est-il modifié?).\n    const { article, editArticle, isEdited } = this.state;\n\n    // Si l'article à modifier existe ... (editArticle = article à modifier).\n    if (editArticle) {\n      if (isEdited) { // Si est-il modifié ... (isEdited = est-il modifié?).\n        const formData = new FormData(); // Création d'un nouveau formulaire (formData = formulaire).\n        formData.set(\"message\", valueArticle); // Ajout du contenu de l'article (valueArticle = contenu de l'article).\n        // Si un fichier a été uploadé ... (fileUpload = fichier uploadé).\n        if (fileUpload != null) formData.append(\"image\", fileUpload);\n        await axios.put(this.articleUrl + article.id, formData, { // Modification de l'article (article.id = id de l'article). (formData = formulaire).\n          headers: { // En-tête de la requête.\n            // Jeton d'authentification (token). (sessionStorage.getItem(\"token\") = récupération du token).\n            Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n          }\n        }).then(() => { // Si la modification a réussi ... \n          this.setState({ editArticle: false }); // Mettre à jour l'état (editArticle = false). (editArticle = article à modifier).\n          App.ReloadApp(); // Rafraichir la page (App = application).\n        });\n      }\n      else this.setState({ editArticle: false });\n    }\n    else {\n      this.setState({ editArticle: true });\n    }\n  }\n\n  // Gestion des events\n  OnChange(event) {\n    const { article } = this.state; // Récupération des données de l'état (article = article).\n    const myCase = event.target.name; // Récupération du nom de l'input (myCase = nom de l'input).\n    switch (myCase) { // Selon le nom de l'input ... (myCase = nom de l'input).\n      case 'message': // Si le nom de l'input est message ... (myCase = nom de l'input).\n        // Mettre à jour l'état (isEdited = true). (article.article = contenu de l'article). (event.target.value = contenu de l'input).\n        if (article.article !== event.target.value) this.setState({ isEdited: true });\n        // Mettre à jour l'état (isEdited = false). (article.article = contenu de l'article). (event.target.value = contenu de l'input).\n        else this.setState({ isEdited: false });\n        // Mettre à jour l'état (valueArticle = contenu de l'input). (event.target.value = contenu de l'input).\n        this.setState({ valueArticle: event.target.value });\n        break; // Sortie de la condition.\n\n      case 'picture': // Si le nom de l'input est picture ... (myCase = nom de l'input).\n        // console.log(event.target.files[0]); // Afficher le fichier uploadé  \n        console.log(event.target.files[0]);\n        // Mettre à jour l'état (isEdited = true). (fileUpload = fichier uploadé). (event.target.files[0] = fichier uploadé).\n        this.setState({ isEdited: true, fileUpload: event.target.files[0] });\n        break;\n      default:\n        console.error('Nothing here!');\n        break;\n    }\n  }\n\n  // Suppression d'une image (supprimer l'image).\n  async onDeleteImage() {\n    const { article } = this.state; // Récupération des données de l'état (article = article).\n    if (window.confirm('Vous êtes sur le point de supprimer votre image...\\nEtes vous sure ?')) {\n      // Suppression de l'image (article.id = id de l'article). (1 = id de l'image).\n      await axios.delete(this.articleUrl + article.id + '/' + 1, {\n        headers: {\n          // Jeton d'authentification (token). (sessionStorage.getItem(\"token\") = récupération du token).\n          Authorization: \"Bearer \" + sessionStorage.getItem(\"token\")\n        }\n      })\n        .then(() => App.ReloadApp()); // Rafraichir la page (App = application).\n    }\n  }\n\n  // Suppression d'un article et redirection vers la page d'accueil.\n  async onDeleteClick() {\n    const { article } = this.state; // Article à supprimer.\n    if (window.confirm('Vous êtes sur le point de supprimer cet article...\\nÊtes vous sûre ?')) {\n      // Suppression de l'article dans la base de données.\n      await axios.delete(this.articleUrl + article.id + '/' + 0, { // 0 = supprimer l'article et ses commentaires.\n        headers: { // Ajout du token dans les headers.\n          Authorization: \"Bearer \" + sessionStorage.getItem(\"token\") // Ajout du token dans les headers de la requête.\n        }\n      })\n        .then(() => App.ReloadApp()); // Rafraichissement de la page.\n    }\n  }\n\n  // Convertisseur de date en string pour l'affichage de la date de publication de l'article dans le composant.\n  convertDate() {\n    const { article } = this.state; // Récupération de l'article.\n    const start = new Date(article.postDate).getTime(); // Récupération de la date de publication de l'article.\n    const current = Date.now(); // Récupération de la date actuelle du système.\n    const result = new Date(current - start); // Calcul de la différence entre la date de publication de l'article et la date actuelle.\n    let since = new Date(result); // Conversion de la différence en date pour l'affichage dans le composant.\n    if (since.getFullYear() <= 1970) // Si l'année de la différence est inférieure à 1970, on affiche \"Il y a moins de 1 an\" (1 an = 365 jours).\n      if (since.getMonth() + 1 <= 1) // Si le mois de la différence est inférieur à 1, on affiche \"Il y a moins de 1 mois\" (1 mois = 30 jours).\n        if (since.getDate() <= 1) // Si le jour de la différence est inférieur à 1, on affiche \"Il y a moins de 1 jour\" (1 jour = 24 heures).\n          if (since.getHours() <= 1) // Si l'heure de la différence est inférieur à 1, on affiche \"Il y a moins de 1 heure\" (1 heure = 60 minutes).\n            if (since.getMinutes() < 1) // Si les minutes de la différence sont inférieures à 1, on affiche \"Il y a moins de 1 minute\" (1 minute = 60 secondes).\n              since = new Date(result).getSeconds() + 'sec.'; // Si les secondes de la différence sont inférieures à 1, on affiche \"Il y a moins de 1 seconde\" (1 seconde = 1000 millisecondes).\n            else since = since.getMinutes() + 'min.'; // Sinon, on affiche le nombre de minutes de la différence entre la date de publication de l'article et la date actuelle.\n          else since = since.getHours() + 'h.'; // Sinon, on affiche le nombre d'heures de la différence entre la date de publication de l'article et la date actuelle.\n        else since = since.getDate() + 'j.'; // Sinon, on affiche le nombre de jours de la différence entre la date de publication de l'article et la date actuelle.\n      else since = since.getMonth() + 1 + 'm.'; // Sinon, on affiche le nombre de mois de la différence entre la date de publication de l'article et la date actuelle.\n    else since = since.getFullYear() + 'y.'; // Sinon, on affiche le nombre d'années de la différence entre la date de publication de l'article et la date actuelle.\n\n    return `${since}`; // Retourne la date de publication de l'article.\n  }\n\n\n  render() {   // Rendu du composant.\n    // Récupération des données de l'état (editArticle = édition de l'article, article = article,\n    // likes = likes de l'article, author = auteur de l'article, userLogged = utilisateur connecté).\n    const { editArticle, article, likes, author, userLogged } = this.state;\n    // Récupération de l'état (isClicked = clique sur le bouton de like).\n    const { isClicked } = this.state;\n    // Récupération de l'état (showComments = affichage des commentaires, comments = commentaires, \n    // commentsLoaded = chargement des commentaires).\n    const { showComments, comments, commentsLoaded } = this.state;\n    // Récupération des données de l'état (valueArticle = contenu de l'article, fileUpload = image de l'article).\n    const { valueArticle, fileUpload } = this.state;\n    return (<>\n\n      {!editArticle ? (<>             {/* Si l'article n'est pas en édition, on affiche le composant. */}\n        {article ? (<>                {/* Si l'article existe, on affiche le composant. */}\n          <article key={article.id + '-article'}>\n            <div className=\"article-author\">                              {/* Div contenant l'auteur de l'article. */}\n              <Avatar dataUser={{ ...author, isProfile: false }} />       {/* Avatar de l'auteur de l'article. */}\n              <div className=\"author-infos\">                              {/* Informations de l'auteur de l'article. */}\n                <h3>{author.firstname} {author.lastname}</h3>             {/* Nom et prénom de l'auteur de l'article. */}\n\n                {/* Tâche de l'auteur de l'article et date de publication de l'article. */}\n                <h4>{author.task.tasks} | <i className=\"fa-solid fa-clock\"></i> {this.convertDate()}</h4>\n              </div>\n\n              {/* Si l'auteur de l'article est l'utilisateur connecté ou si l'utilisateur connecté est un administrateur, on affiche le bouton de suppression de l'article. */}\n              {article.authorId === userLogged.id || userLogged.isAdmin ? (<>\n                <div className=\"article-options\" onClick={this.onOptionsClick}>\n                  <i className=\"fa-solid fa-ellipsis\"></i>\n                  {isClicked ? (<>     {/* Si le bouton de suppression est cliqué, on affiche le menu de suppression. */}\n\n                    {/* Menu de suppression de l'article. */}\n                    <Options onEditClick={this.onEditClick} onDeleteClick={this.onDeleteClick} dataArticle={article} for={'Article'} />\n                  </>) : null}\n                </div>\n              </>) : (<>\n                <div className=\"article-no-options\"></div>  {/* Sinon, on affiche un div vide. */}\n              </>)}\n            </div>\n\n            <p>{article.article}</p>                                {/* Contenu de l'article. */}\n            {/* Si l'article contient une image, on affiche l'image, sinon on affiche un div vide. */}\n            {article.image === 'none' ? null : <img src={article.image} alt='postedImage' />}\n\n            {/* Div contenant les informations de l'article, le nombre de likes et le nombre de commentaires. */}\n            <div className=\"infos-total\">\n              {/* Si le nombre de likes est supérieur à 1, on affiche le nombre de likes. */}\n              {likes && this.totalLike >= 1 ? (<>\n                {/* Nombre de likes, nombre de commentaires et bouton de like. */}\n                <p className=\"like\"><i className=\"fa-solid fa-heart\"></i> {this.totalLike} J'aime</p>\n                {/* Sinon, on affiche un div vide. */}\n              </>) : null}\n              {/* Si le nombre de commentaires est supérieur à 1, on affiche le nombre de commentaires. */}\n              {comments.length ? (<>\n                {/* Nombre de commentaires, bouton de commentaire. */}\n                <p className=\"comment\">{comments.length} commentaire(s) <i className=\"fa-solid fa-comment\"></i></p>\n                {/* Sinon, on affiche un div vide. */}\n              </>) : null}\n            </div>\n\n            {this.setOptions()}        {/* Div contenant les options de l'article. */}\n\n            {showComments ? (<>        {/* Si l'affichage des commentaires est activé, on affiche le composant. */}\n\n              {commentsLoaded ? (<>    {/* Si les commentaires sont chargés, on affiche le composant. */}\n                {/* Commentaires de l'article de l'utilisateur connecté. */}\n                <Comments userLogged={userLogged} articleId={article.id} comments={comments} />\n              </>) : (<></>)}\n\n            </>) : null}      {/* Sinon, on affiche un div vide. */}\n          </article>\n        </>) : (<></>)}\n\n      </>) : (<>\n        {/* Si l'article est en édition, on affiche le composant. */}\n        <article key={'edit-article-' + article.id}>\n          <div className=\"article-author\">                             {/* Div contenant l'auteur de l'article. */}\n            <Avatar dataUser={{ ...author, isProfile: false }} />      {/* Avatar de l'auteur de l'article. */}\n            <div className=\"author-infos\">                             {/* Informations de l'auteur de l'article. */}\n              <h3>{author.firstname} {author.lastname}</h3>            {/* Nom et prénom de l'auteur de l'article. */}\n\n              {/* Tâche de l'auteur de l'article et date de publication de l'article. */}\n              <h4>{author.task.tasks} | <i className=\"fa-solid fa-clock\"></i> {this.convertDate()}</h4>\n            </div>\n            <div className=\"article-no-options\">                       {/* Div vide. */}\n              {/* Bouton de confirmation de l'édition de l'article. */}\n              <button onClick={this.onEditClick}><span className=\"hidden\">confirm edit article</span><i className=\"fa-solid fa-check\"></i></button>\n            </div>\n          </div>\n\n          <form onSubmit={this.onEditClick}>                         {/* Formulaire de modification de l'article. */}\n            <label htmlFor=\"message\">message</label>                 {/* Label du champ de texte. */}\n\n            {/*Placeholder du champ de texte pour la publication de l'article. */}\n            <input id=\"message\" type='text' name=\"message\" placeholder='Un petit mot ?'\n              defaultValue={valueArticle} onChange={this.OnChange} />\n\n            <div className='article-edit-avatar'>\n              <label htmlFor=\"picture\" className=\"file-upload\" onChange={this.OnChange}>\n                <span className=\"hidden\">picture</span>\n                {fileUpload ? <i className=\"fa-solid fa-xmark\"></i> : <i className=\"fa-solid fa-image\"></i>}\n              </label>\n              <input id=\"picture\" name='picture' type='file' label='UploadImage'\n                accept=\".jpg,.jpeg,.png,.gif\" onChange={this.OnChange} />\n              {article.image !== 'none' ? (<>\n                <button label='delAvatar' onClick={this.onDeleteImage}>\n                  <span className=\"hidden\">delete Avatar</span>\n                  <i className=\"fa-solid fa-trash\"></i>\n                </button>\n                <img src={article.image} alt='postedImage' />\n              </>) : null}\n            </div>\n          </form>\n        </article>\n      </>)}\n    </>\n    )\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}